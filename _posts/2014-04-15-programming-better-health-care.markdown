---
date: '2014-04-15 00:44:00'
layout: post
slug: programming-better-health-care
title: Programming Better Health Care
---

> **TL;DR**: Everyday health care software is vastly inferior to other, widely-used software. There are far less open source and startup projects in health care than in other realms of software development, even though this is a highly profitable field.

As a medical student and programmer who follows [Hacker News][hn], it surprises me how often topics relating to health appear on the [100+ point twitter feed][feed]. It surprises me not because the material provided is not interesting or that intelligent people laboring in one field should not be excited about advances in another. Rather, I'm surprised because despite the overwhelming interest that programmers have in the medical field I see very few startups or open source projects that service this arena. This may seem obvious to you. The highly academic and often convoluted nature of medicine should be left to those who are experts in it. However, in my experience I find that the areas of cutting edge research and ivory tower academia are not the areas that are lacking the benefit of the programming community.

I understand that bleeding edge technology is attractive and that the appeal in these selected medical articles is that they provide hope, awe, and excitement in a realm that mostly appears mysterious. And I agree that this appeal is legitimate and right. But the market that gets ignored by this ideology is one of the largest markets in the entire world. Doctors do not spend their days diagnosing extremely rare diseases, growing limbs in test tubes, or cloning sheep. They spend their days in the trenches of hum-drum health care, trying to help the masses live with a slightly better quality of life. I don't mean to say that research and advances in the more erudite areas of medicine are not important -- quite the opposite. These advances of course can and do trickle down into the larger market of every day medicine. What I do mean to say is that while researchers develop new artillery to fight disease, there is a lot of work to be done on the front lines.

The third year of medical school focuses on time spent working in clinics of various specialties and sub-specialties. I believe it has allowed me a unique opportunity to see the health care system as a whole -- an opportunity I may never experience again. Doctors are often isolated in the microcosm of their own clinics. Their job, of course, is to focus on their own specialty and to provide expertise in that subset of knowledge. This format is useful and necessary, but in my opinion it sacrifices a perspective on the system as a whole. As I rotate from office to office I notice the subtle differences in the ways that various doctors practice medicine. One week I may rotate with a doctor who complains of the ignorance of a colleague while the next week I rotate with that colleague and see a different perspective. Usually the deepest problems are those of communication, education and efficiency. These are problems that programmers can solve.

Electronic Medical Records (EMRs) were an inevitable step in medicine and clearly one in the right direction. Unfortunately, all of them are closed source, extremely expensive, unacceptably cumbersome, and platform dependent (with very few exceptions). I see doctors struggling with EMR maintenance and troubleshooting far too often while sick patients are waiting to be seen. My issue with this is not necessarily waiting room times (as distasteful as they may be), but instead the fact that a rushed physician is a poor physician. When doctors fail to allocate the appropriate amount of time for their patients they fail to adequately assess them. I don't mean to blame doctors for this. They are against great odds, fighting a losing battle against documentation, insurance paper work, government policies, pharmacies, third party requests and a constantly changing fund of medical knowledge. Most of these are things that physicians received little to no formal training in, and despite an increasingly electronic world, doctors are no more tech savvy than the average individual.

From my perspective, it seems that a large reason that programmers steer clear of the medical field is intimidation. Doctors are difficult to get a hold of, and they have learned a vast amount of knowledge that seems inaccessible and difficult to relate to. In a market as large as this one, there are probably powerful players far more capable of producing quality products than a few rag-tag programmers. There are also the issues of liability and security. The legal indications of HIPAA can be daunting. Sites like Stack Overflow and online MOOCs steer clear of providing any medical education. It seems that from the outside, programming medical software looks something like fighting a dragon blindfolded with a spoon. But from the inside, it's surviving on software leftovers while the rest of the world is enjoying the spoils of agricultural advancement.

Let me explain what I mean. Security is a topic that is near and dear to the heart of many developers. Neck beards immersed in the open source world are often intensely data paranoid, as is evidenced by backing up their 80 character password encrypted data to off-site locations multiple times a day. Many of them are also interested in the topic of mental health and may suffer from various disorders of anxiety, depression and other psychiatric illnesses. That being said, let me make it clear that your psychiatrist almost assuredly is still using Windows XP running 5 year old EMR software littered with bugs and multiple ports exposed to some remote desktop service that they can access from home. Most communication is done by phone or fax and can be easily socially engineered. The vast majority of doctor's offices could be compromised by a metasploit script kiddy with a free Saturday and a curious spirit.

Even if your private medical data's sanctity does not stir you to arms, perhaps the quality of your own life will. Please realize that without appropriate tools to aid doctors, they will not be able to provide you the quality advice, diagnosis, and treatment that you demand. There is a growing tendency to blame doctors for their inability to meet expectations, but the truth of the matter is that they are ill equipped to combat modern demands. They have far more sophisticated free email services than EMRs or diagnostic tools. We have become entitled as consumers. We expect the same innovation in medicine as we do from tech startups, but the results are vastly different. A programmable API built in to a medical database or EMR is unheard of. Paying for a doctor's visit with bitcoins? Yeah, right.

Part of this is due to the stubborn mentality of old medicine. Doctors can be resistant to change when there is no guaranteed benefit. They, like any other average computer user, do not like change. However, doctors are very willing to tolerate change when the data supports it. If you could prove that using a particular EMR decreased morbidity or mortality by 10%, doctors would flock to it. They wouldn't hesitate to pay a pretty penny either. That is the gold mine that closed source EMR companies have been seeking. Personally, I cannot see a better opportunity for an open source product. There are hundreds of thousands of wealthy customers who would dive at the chance to save on the ridiculous cost of EMRs and would be more than willing to pay substantial fees for support regarding a piece of software that is basically a glorified data management system for text data and PDFs. I feel confident that with enough time I could make an EMR from shell scripts, git, and pandoc that is free and would save my practice thousands of dollars and countless hours.

Becoming a doctor has made me view myself as a patient differently. I now deeply regret the fact that I cannot easily view or keep track of my own health information. It can be difficult or confusing to get a copy of my labs, imaging, and doctor's notes, making it almost impossible to understand what I am being prescribed and why. Imagine a distributed medical information format which patients can access with a viewer of their choosing. They decide which providers they will share their health information with, but the providers will be able to see their complete health history. It may surprise you, but it is currently extremely difficult to shift your medical records from one primary care provider to another. If you move to another state, most of your health information is effectively lost unless you go to great lengths to preserve it. Your family doctor is unable to see the labs or notes that your cardiologist entered into his or her personal EMR. Much of your current doctor's data is based on your own memory. How well do you remember the name of the last five drugs you took? When I tell people this they are often shocked. They assume that medical technology like this was available 10 years ago. It was, but it still has largely not been implemented. It is extremely difficult for doctors to view your past medical history in its totality, making their job much more difficult.

EMRs are not the only problem, though. Doctors are increasingly relying on medical smart phone apps and knowledge databases like [UpToDate][]. These are often expensive and can sometimes be unreliable. Doctors do not have the advantage of brushing up on monads by attending a MOOC. There are numerous technological applications that are yet to be met in the medical field, but lack an appropriate interest. Unfortunately, it seems the people who are able to see this deficit are the ones who lack both the time and technical experience to meet the need. I am a programming dilettante -- not an expert. I am hoping to alleviate some of the deficiencies where I am able, but it requires more than a handful of people to change a beast as large as the health care system. There is nothing particular special about what is happening on the screen behind the doctor's desk. It's just more poorly made closed source software that the physician has a very limited understanding of.

So, what's my proposal? How do I think you might help this cause? Well, I don't think it's an easy fix. But I think a change can start by sparking a capitalist interest in your mind. There is money to be made in health care software, and it's good, sustainable money. There is purpose in this kind of work. It would benefit a large number of people and improve health care across the world, especially if the software was free in nature. You, as a result, would benefit from doctors using this software. It would allow them to provide better care to your loved ones and yourself. I believe it holds all the potential of a very rewarding venture. I don't think it's a one person solution or a one program solution. This will require a community of developers becoming more interested in programming for this cause. It will require a large increase in the number of open source products geared towards providing better health care. This may involve increasing your own understanding of the health care system and medical knowledge, which is no small task. But I believe it is a task worth pursuing.

This post is meant to serve as my plea to you as a developer to consider working on a health care related open source product -- any product. I know you probably can't quit your job and devote your life to this interest but you can spare a few hours to contribute to some project that benefits health care as a whole. My dream is to have relevant technology available when I become board certified in a specialty that I can use to benefit my patients. My hope is that I can somehow assist in a technological revolution that will aid more patients than I'm able to see alone. Please consider how you might contribute to aiding doctors in doing their job effectively, securely, and efficiently.

   [hn]: https://news.ycombinator.com/
   [feed]: http://talkfast.org/2010/07/23/a-cure-for-hacker-news-overload/
   [UpToDate]: http://www.uptodate.com/home
